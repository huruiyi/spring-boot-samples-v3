<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="
        http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!-- Spring的属性注入的方式================== -->
    <!-- 构造方法的方式 -->
    <bean id="car1" class="com.example.demo.demo4.Car1">
        <constructor-arg name="name" value="宝马"/>
        <constructor-arg name="price" value="800000"/>
    </bean>

    <!-- set方法的方式 -->
    <bean id="car2_1" class="com.example.demo.demo4.Car2">
        <property name="name" value="奔驰"/>
        <property name="price" value="1000000"/>
    </bean>

    <!-- 改为p名称空间的方式 -->
    <bean id="car2_2" class="com.example.demo.demo4.Car2" p:name="奇瑞QQ" p:price="30000"></bean>

    <!-- SpEL的属性注入 -->
    <bean id="car2_3" class="com.example.demo.demo4.Car2">
        <property name="name" value="#{carInfo.name}"></property>
        <property name="price" value="#{carInfo.calculatorPrice()}"></property>
    </bean>

    <!-- SpEL的属性注入 -->
    <bean id="carInfo" class="com.example.demo.demo4.CarInfo">
    </bean>

    <!-- 改为p名称空间的方式 -->
    <bean id="employee_1" class="com.example.demo.demo4.Employee" p:name="王东" p:car2-ref="car2_1"></bean>

    <!-- SpEL的属性注入 -->
    <bean id="employee_2" class="com.example.demo.demo4.Employee">
        <property name="name" value="#{'赵洪'}"></property>
        <property name="car2" value="#{car2_2}"></property>
    </bean>

    <!-- set方法注入对象类型的属性 -->
    <!-- value:设置普通类型的值，ref:设置其他的类的id或name -->
    <bean id="employee_3" class="com.example.demo.demo4.Employee">
        <property name="name" value="涛哥"/>
        <property name="car2" ref="car2_3"/>
    </bean>
    <!-- <import resource="applicationContext2.xml" /> -->
</beans>